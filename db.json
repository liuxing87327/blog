{"meta":{"version":1,"warehouse":"1.0.2"},"models":{"Asset":[{"_id":"themes/coney/source/js/jquery-2.1.0.min.js","path":"js/jquery-2.1.0.min.js","modified":0},{"_id":"themes/coney/source/img/logo.svg","path":"img/logo.svg","modified":0},{"_id":"themes/coney/source/img/logo.jpg","path":"img/logo.jpg","modified":0},{"_id":"themes/coney/source/img/favicon.ico","path":"img/favicon.ico","modified":0},{"_id":"themes/coney/source/img/dots-2x.png","path":"img/dots-2x.png","modified":0},{"_id":"themes/coney/source/img/coney.png","path":"img/coney.png","modified":0},{"_id":"themes/coney/source/img/author.jpg","path":"img/author.jpg","modified":0},{"_id":"themes/coney/source/font/fontawesome-webfont.woff","path":"font/fontawesome-webfont.woff","modified":0},{"_id":"themes/coney/source/font/fontawesome-webfont.ttf","path":"font/fontawesome-webfont.ttf","modified":0},{"_id":"themes/coney/source/font/fontawesome-webfont.svg","path":"font/fontawesome-webfont.svg","modified":0},{"_id":"themes/coney/source/font/fontawesome-webfont.eot","path":"font/fontawesome-webfont.eot","modified":0},{"_id":"themes/coney/source/font/coveredbyyourgrace-webfont.woff","path":"font/coveredbyyourgrace-webfont.woff","modified":0},{"_id":"themes/coney/source/font/coveredbyyourgrace-webfont.ttf","path":"font/coveredbyyourgrace-webfont.ttf","modified":0},{"_id":"themes/coney/source/font/coveredbyyourgrace-webfont.svg","path":"font/coveredbyyourgrace-webfont.svg","modified":0},{"_id":"themes/coney/source/font/coveredbyyourgrace-webfont.eot","path":"font/coveredbyyourgrace-webfont.eot","modified":0},{"_id":"themes/coney/source/font/FontAwesome.otf","path":"font/FontAwesome.otf","modified":0},{"_id":"themes/coney/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0},{"_id":"themes/coney/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0},{"_id":"themes/coney/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0},{"_id":"themes/coney/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0},{"_id":"themes/coney/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0},{"_id":"themes/coney/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0},{"_id":"themes/coney/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0},{"_id":"themes/coney/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0},{"_id":"themes/coney/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0},{"_id":"themes/coney/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0},{"_id":"themes/coney/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0},{"_id":"themes/coney/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0},{"_id":"themes/coney/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0},{"_id":"themes/coney/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0},{"_id":"themes/coney/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0},{"_id":"themes/coney/source/css/style.styl","path":"css/style.styl","modified":0}],"Cache":[{"_id":"source/404.html","shasum":"468385b3708e0c091347e17f25aaf0ac1165c156","modified":1433920115000},{"_id":"source/_posts/faqs.md","shasum":"a22e8fc0ee6d5ec3765ada3bb18e575d1ac7b8f6","modified":1433945923000},{"_id":"source/_posts/websocket-demo.md","shasum":"030f5ae5b55bb588a46e3938f65436ad77d3fcb1","modified":1433938538000},{"_id":"source/about/index.md","shasum":"d22a62ff068aaa6085e3061fd46426b90204595f","modified":1433875108000},{"_id":"source/categories/index.md","shasum":"2e19a36488900a8298812ac3680c74432ba8fc05","modified":1433870645000},{"_id":"source/tags/index.md","shasum":"fc88de6a4b24223a3bc68e4a9115cd9908673ff6","modified":1433870650000},{"_id":"themes/coney/LICENSE","shasum":"a12a2dc681f818facc310fa916aa5fd17c781aa6","modified":1433868217000},{"_id":"themes/coney/README.md","shasum":"34d4db9e0bb3846ff3db6183a687e6999e57a5b6","modified":1433868217000},{"_id":"themes/coney/_config.yml","shasum":"3c73ef0ae2a905fe63b8ad0cbc579d21d31e6ccf","modified":1433948038000},{"_id":"themes/coney/languages/default.yml","shasum":"7bb3eb60c1cf8f96f9007487414bd376cef90766","modified":1433872044000},{"_id":"themes/coney/languages/zh-CN.yml","shasum":"fcb656b7bdd89a78b0286a48e3dbe80f6f22d55a","modified":1433945482000},{"_id":"themes/coney/languages/zh-TW.yml","shasum":"bbaf1a9655f562a247913ad9f730ce53265ef501","modified":1433870809000},{"_id":"themes/coney/layout/_partial/archive.ejs","shasum":"aa3e66bb3b0249460ecc96ca9787c7e2f8e736b5","modified":1433868217000},{"_id":"themes/coney/layout/_partial/after_footer.ejs","shasum":"c02949b46037c45514a0851303b40f5bbfe6a9ad","modified":1433948205000},{"_id":"themes/coney/layout/_partial/article.ejs","shasum":"64fb413b46ed1d4823e0a0fb6e719e358950fc14","modified":1433868217000},{"_id":"themes/coney/layout/_partial/baidu_analytics.ejs","shasum":"27bad7f09baee31c5159319b848f8f68ca3525b6","modified":1433919529000},{"_id":"themes/coney/layout/_partial/categories.ejs","shasum":"8a52d0344d5bce1925cf586ed73c11192925209b","modified":1433868217000},{"_id":"themes/coney/layout/_partial/cnzz_analytics.ejs","shasum":"fbe0a43115b4ddcf318d20f34de88aef91766f9b","modified":1433880082000},{"_id":"themes/coney/layout/_partial/footer.ejs","shasum":"7ef11dbd8420c7f20f4817d84cd9e015b4200b83","modified":1433879928000},{"_id":"themes/coney/layout/_partial/google_analytics.ejs","shasum":"b6871f67c87c87acb5295ce4fb673b16a7296a01","modified":1433868217000},{"_id":"themes/coney/layout/_partial/head.ejs","shasum":"a54be5858963a6c46a8816ad8f11ffc048108bb6","modified":1433948122000},{"_id":"themes/coney/layout/_partial/header.ejs","shasum":"cf03bc496ec3e55ba11b47958b0c0b69ed72eecf","modified":1433868217000},{"_id":"themes/coney/layout/_partial/pagination.ejs","shasum":"6146ac37dfb4f8613090bc52b3fc8cfa911a186a","modified":1433868217000},{"_id":"themes/coney/layout/_partial/post/article.ejs","shasum":"3facf363563c349aa0007c4d2064382068f8fe12","modified":1433936917000},{"_id":"themes/coney/layout/_partial/post/catetags.ejs","shasum":"f6b107078094333b6567d4a97700f559159675e1","modified":1433868217000},{"_id":"themes/coney/layout/_partial/post/comment.ejs","shasum":"13d8720b311ddee20c4d29154cd8a460125e7a6c","modified":1433868217000},{"_id":"themes/coney/layout/_partial/post/footer.ejs","shasum":"a9aeae612eb7085bbe74bd12086198320e6c3702","modified":1433868217000},{"_id":"themes/coney/layout/_partial/post/gallery.ejs","shasum":"7ca5b1db9439be61a8b77f6f7d857b56fdf1517f","modified":1433868217000},{"_id":"themes/coney/layout/_partial/post/header.ejs","shasum":"73aa8a410cc80277930acaec23003c30eeac6d79","modified":1433868217000},{"_id":"themes/coney/layout/_partial/post/jiathis.ejs","shasum":"adc047d2bbd031092df86f3be2866ea9c3b5f3c9","modified":1433868217000},{"_id":"themes/coney/layout/_partial/post/pagination.ejs","shasum":"2dfe2b1f322b707179685a492e21a3b603fcfaf2","modified":1433945477000},{"_id":"themes/coney/layout/_partial/search.ejs","shasum":"aed90406246cc43f60dda8cd6558e9eccee342a4","modified":1433868217000},{"_id":"themes/coney/layout/_partial/sidebar.ejs","shasum":"3298799a7c787164f4efadeed24f33d92cbcc9da","modified":1433868217000},{"_id":"themes/coney/layout/_partial/tags.ejs","shasum":"b33b2b5d08f1d53a8de25a95f660f7f1cea7b3cb","modified":1433868217000},{"_id":"themes/coney/layout/_widget/archive.ejs","shasum":"07443d9617611d51caba34d3b536ff34c4ecde5e","modified":1433868217000},{"_id":"themes/coney/layout/_widget/category.ejs","shasum":"9b4cc6be18aa6c5da4cf45913d5be83fc33081db","modified":1433868217000},{"_id":"themes/coney/layout/_widget/links.ejs","shasum":"ea4d4edcba185144246fd2315854519f6f2afa83","modified":1433881349000},{"_id":"themes/coney/layout/_widget/recent_comments.ejs","shasum":"3a475f29c4fa7dcb1bea0c0b8aa645fad2db168f","modified":1433868217000},{"_id":"themes/coney/layout/_widget/recent_posts.ejs","shasum":"95085ee0c58a9d9ee1c1465681211763225aa4e9","modified":1433868217000},{"_id":"themes/coney/layout/_widget/rss.ejs","shasum":"0a4b5f2a2e36a1d504fe2e7c6c8372cbb4628aab","modified":1433868217000},{"_id":"themes/coney/layout/_widget/tag.ejs","shasum":"cc97db230f727c27519298166ad904358811fb53","modified":1433868217000},{"_id":"themes/coney/layout/_widget/tagcloud.ejs","shasum":"10a1001189d5c28ce6d42494563b9637c302b454","modified":1433868217000},{"_id":"themes/coney/layout/archive.ejs","shasum":"b4fd8369c1480e4ad283be5947648630e8e7cc01","modified":1433868217000},{"_id":"themes/coney/layout/category.ejs","shasum":"9b740fc33f6f028df60f0bc4312bf3ebd03aa8ea","modified":1433868217000},{"_id":"themes/coney/layout/index.ejs","shasum":"cbca1720a7e4c94233e17b45f0b46ab4fac5b765","modified":1433868217000},{"_id":"themes/coney/layout/layout.ejs","shasum":"8a86db06f8ec21c237930d37fa340f9638762dae","modified":1433921311000},{"_id":"themes/coney/layout/page.ejs","shasum":"bd6bbf2ea8e183bd835867ff617dc6366b56748c","modified":1433868217000},{"_id":"themes/coney/layout/post.ejs","shasum":"3114134775bdde5a83cf14feb019606fa2b2b2be","modified":1433868217000},{"_id":"themes/coney/layout/tag.ejs","shasum":"45150a2365768b6b67880193c9264ad2bb4814db","modified":1433868217000},{"_id":"themes/coney/package.json","shasum":"00357ef6f24eb049074da81809e98f973f528cca","modified":1433868217000},{"_id":"themes/coney/scripts/fancybox.js","shasum":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1433868217000},{"_id":"themes/coney/source/css/_base/code.styl","shasum":"cb95523618d6fc20b295078c82dea538fab7fdb3","modified":1433947379000},{"_id":"themes/coney/source/css/_base/font.styl","shasum":"75f264bc742888dbe192e8d19eda70705d13c709","modified":1433868217000},{"_id":"themes/coney/source/css/_base/public.styl","shasum":"29deec49b60533cc4196175345eaa4b2d611a97e","modified":1433868217000},{"_id":"themes/coney/source/css/_base/variable.styl","shasum":"daa6bc3ce8d58e6bcbfc66eca73a7cce64dd425d","modified":1433944740000},{"_id":"themes/coney/source/css/_partial/article.styl","shasum":"82d7621920e221b7e52dfdb74cbcec718d0cc666","modified":1433868217000},{"_id":"themes/coney/source/css/_partial/aside.styl","shasum":"d0d8f68cae0dd59d34b5f1f470acf573b166d4de","modified":1433868217000},{"_id":"themes/coney/source/css/_partial/body","shasum":"aee4dc75b8f32310889c33f61e33c2b2e7f942b7","modified":1433938810000},{"_id":"themes/coney/source/css/_partial/duoshuo.styl","shasum":"e85f1192283f043115c272a9deb3cb6ced793990","modified":1433868217000},{"_id":"themes/coney/source/css/_partial/footer.styl","shasum":"a84eba588408c654777f675df8bb2eb60a5d0f1c","modified":1433868217000},{"_id":"themes/coney/source/css/_partial/gallery.styl","shasum":"a544a58fdb4c8dd8274159323abd1e38cb03215e","modified":1433868217000},{"_id":"themes/coney/source/css/_partial/header.styl","shasum":"99bc986a365bc0056b92a4757707ff97d6a18450","modified":1433938805000},{"_id":"themes/coney/source/css/_partial/helper.styl","shasum":"52d4ee51b7087c2c2a7e7ded6f63270165d9de89","modified":1433868217000},{"_id":"themes/coney/source/css/_partial/index.styl","shasum":"f1e6b8843bfe1a7fbdcf018e95780b819aa32ab3","modified":1433868217000},{"_id":"themes/coney/source/css/style.styl","shasum":"5f47cf3378efa79ab9c72669eb60468212e8cb5a","modified":1433944828000},{"_id":"themes/coney/source/fancybox/blank.gif","shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1433868217000},{"_id":"themes/coney/source/fancybox/fancybox_loading.gif","shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1433868217000},{"_id":"themes/coney/source/fancybox/fancybox_loading@2x.gif","shasum":"273b123496a42ba45c3416adb027cd99745058b0","modified":1433868217000},{"_id":"themes/coney/source/fancybox/fancybox_overlay.png","shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1433868217000},{"_id":"themes/coney/source/fancybox/fancybox_sprite.png","shasum":"17df19f97628e77be09c352bf27425faea248251","modified":1433868217000},{"_id":"themes/coney/source/fancybox/fancybox_sprite@2x.png","shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1433868217000},{"_id":"themes/coney/source/fancybox/helpers/fancybox_buttons.png","shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1433868217000},{"_id":"themes/coney/source/fancybox/helpers/jquery.fancybox-buttons.css","shasum":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1433868217000},{"_id":"themes/coney/source/fancybox/helpers/jquery.fancybox-buttons.js","shasum":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1433868217000},{"_id":"themes/coney/source/fancybox/helpers/jquery.fancybox-media.js","shasum":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1433868217000},{"_id":"themes/coney/source/fancybox/helpers/jquery.fancybox-thumbs.css","shasum":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1433868217000},{"_id":"themes/coney/source/fancybox/helpers/jquery.fancybox-thumbs.js","shasum":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1433868217000},{"_id":"themes/coney/source/fancybox/jquery.fancybox.css","shasum":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1433868217000},{"_id":"themes/coney/source/fancybox/jquery.fancybox.js","shasum":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1433868217000},{"_id":"themes/coney/source/fancybox/jquery.fancybox.pack.js","shasum":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1433868217000},{"_id":"themes/coney/source/font/coveredbyyourgrace-webfont.eot","shasum":"a17d0f10534303e40f210c506ebb8703fa23b7de","modified":1433868217000},{"_id":"themes/coney/source/font/FontAwesome.otf","shasum":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1433868217000},{"_id":"themes/coney/source/font/coveredbyyourgrace-webfont.ttf","shasum":"194ccb4acf77a03dc25bcc174edb266143704fec","modified":1433868217000},{"_id":"themes/coney/source/font/fontawesome-webfont.eot","shasum":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1433868217000},{"_id":"themes/coney/source/font/fontawesome-webfont.woff","shasum":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1433868217000},{"_id":"themes/coney/source/font/coveredbyyourgrace-webfont.woff","shasum":"c6f8dc1a2f6ce914f120e80a876b8fd77b98888e","modified":1433868217000},{"_id":"themes/coney/source/img/author.jpg","shasum":"5d53bfe75d7aa0b4c49c4e1343a2410b3985f9f9","modified":1433868217000},{"_id":"themes/coney/source/img/coney.png","shasum":"2988bf2f10477ef8aa86fcae0d21790d7afebfba","modified":1433868217000},{"_id":"themes/coney/source/img/dots-2x.png","shasum":"2d900f9f8a0b53067401138d8cb411c83e747e8e","modified":1433868217000},{"_id":"themes/coney/source/img/favicon.ico","shasum":"0c57dd7d0944b74be20dc99f1e6f77362ba0ed24","modified":1433868217000},{"_id":"themes/coney/source/img/logo.jpg","shasum":"2897a4a5c849a63bd7bab0da05e75b5e922e337d","modified":1433872200000},{"_id":"themes/coney/source/img/logo.svg","shasum":"0eb0ae32d95c6f0b14adb9ab491775dcd1da3af3","modified":1433868217000},{"_id":"themes/coney/source/font/coveredbyyourgrace-webfont.svg","shasum":"eabdb262d8e246865dfb56031f01ff6e8d2f9d53","modified":1433868217000},{"_id":"themes/coney/source/font/fontawesome-webfont.ttf","shasum":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1433868217000},{"_id":"themes/coney/source/js/jquery-2.1.0.min.js","shasum":"98884258cbdb0d939fa2c5e74fc7ac9e56d8170f","modified":1433868217000},{"_id":"themes/coney/source/font/fontawesome-webfont.svg","shasum":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1433868217000},{"_id":"public/js/jquery-2.1.0.min.js","modified":1433945496268,"shasum":"98884258cbdb0d939fa2c5e74fc7ac9e56d8170f"},{"_id":"public/img/logo.svg","modified":1433945496275,"shasum":"0eb0ae32d95c6f0b14adb9ab491775dcd1da3af3"},{"_id":"public/img/logo.jpg","modified":1433945496278,"shasum":"2897a4a5c849a63bd7bab0da05e75b5e922e337d"},{"_id":"public/img/favicon.ico","modified":1433945496280,"shasum":"0c57dd7d0944b74be20dc99f1e6f77362ba0ed24"},{"_id":"public/img/dots-2x.png","modified":1433945496282,"shasum":"2d900f9f8a0b53067401138d8cb411c83e747e8e"},{"_id":"public/img/coney.png","modified":1433945496284,"shasum":"2988bf2f10477ef8aa86fcae0d21790d7afebfba"},{"_id":"public/img/author.jpg","modified":1433945496287,"shasum":"5d53bfe75d7aa0b4c49c4e1343a2410b3985f9f9"},{"_id":"public/font/fontawesome-webfont.woff","modified":1433945496292,"shasum":"04c3bf56d87a0828935bd6b4aee859995f321693"},{"_id":"public/font/fontawesome-webfont.ttf","modified":1433945496296,"shasum":"7f09c97f333917034ad08fa7295e916c9f72fd3f"},{"_id":"public/font/fontawesome-webfont.svg","modified":1433945496304,"shasum":"46fcc0194d75a0ddac0a038aee41b23456784814"},{"_id":"public/font/fontawesome-webfont.eot","modified":1433945496306,"shasum":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e"},{"_id":"public/font/coveredbyyourgrace-webfont.woff","modified":1433945496307,"shasum":"c6f8dc1a2f6ce914f120e80a876b8fd77b98888e"},{"_id":"public/font/coveredbyyourgrace-webfont.ttf","modified":1433945496311,"shasum":"194ccb4acf77a03dc25bcc174edb266143704fec"},{"_id":"public/font/coveredbyyourgrace-webfont.svg","modified":1433945496313,"shasum":"eabdb262d8e246865dfb56031f01ff6e8d2f9d53"},{"_id":"public/font/coveredbyyourgrace-webfont.eot","modified":1433945496316,"shasum":"a17d0f10534303e40f210c506ebb8703fa23b7de"},{"_id":"public/font/FontAwesome.otf","modified":1433945496317,"shasum":"b5b4f9be85f91f10799e87a083da1d050f842734"},{"_id":"public/fancybox/jquery.fancybox.pack.js","modified":1433945496319,"shasum":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e"},{"_id":"public/fancybox/jquery.fancybox.js","modified":1433945496321,"shasum":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed"},{"_id":"public/fancybox/jquery.fancybox.css","modified":1433945496322,"shasum":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6"},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","modified":1433945496324,"shasum":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c"},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","modified":1433945496326,"shasum":"4ac329c16a5277592fc12a37cca3d72ca4ec292f"},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","modified":1433945496327,"shasum":"294420f9ff20f4e3584d212b0c262a00a96ecdb3"},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","modified":1433945496329,"shasum":"dc3645529a4bf72983a39fa34c1eb9146e082019"},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","modified":1433945496330,"shasum":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8"},{"_id":"public/fancybox/helpers/fancybox_buttons.png","modified":1433945496333,"shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3"},{"_id":"public/fancybox/fancybox_sprite@2x.png","modified":1433945496336,"shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8"},{"_id":"public/fancybox/fancybox_sprite.png","modified":1433945496339,"shasum":"17df19f97628e77be09c352bf27425faea248251"},{"_id":"public/fancybox/fancybox_overlay.png","modified":1433945496341,"shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0"},{"_id":"public/fancybox/fancybox_loading@2x.gif","modified":1433945496344,"shasum":"273b123496a42ba45c3416adb027cd99745058b0"},{"_id":"public/fancybox/fancybox_loading.gif","modified":1433945496346,"shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c"},{"_id":"public/fancybox/blank.gif","modified":1433945496350,"shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a"},{"_id":"public/css/style.css","modified":1433945497091,"shasum":"81873d5589f092432cd355a2a9d7f198ad66f1f4"},{"_id":"public/404.html","modified":1433948224255,"shasum":"2e634f2108267852004b16ff5c67f28a6444a42d"},{"_id":"public/tags/index.html","modified":1433948224265,"shasum":"bf98bbbc0bd8720848f07540b30fc2bfe176fc4a"},{"_id":"public/categories/index.html","modified":1433948224277,"shasum":"8327ed1cf5ae40cec3993b57add62af9c4daf6b3"},{"_id":"public/about/index.html","modified":1433948224286,"shasum":"01da73883f892101ee544df45b9b77d41ebc2524"},{"_id":"public/2015/06/10/faqs/index.html","modified":1433945497426,"shasum":"c1149b8e0d4f91d4fbe5fc8dd77bfe3b28149493"},{"_id":"public/2015/01/09/websocket-demo/index.html","modified":1433948224346,"shasum":"43cd75c85f847666d1c2e02d91014435c00d7019"},{"_id":"public/archives/index.html","modified":1433948224370,"shasum":"18b548f648e44040563ffadeacb37889b90190d7"},{"_id":"public/archives/2015/index.html","modified":1433948224378,"shasum":"1748104387f9f689ba1fecfed0500597dac659a4"},{"_id":"public/archives/2015/01/index.html","modified":1433948224385,"shasum":"b88f7b5abe4846e70f45275c953b4b74ab8544e4"},{"_id":"public/archives/2015/06/index.html","modified":1433945497504,"shasum":"1a374fcc1fd3419e2812530730fa86eb159fe389"},{"_id":"public/categories/Java/index.html","modified":1433948224393,"shasum":"2c22acba8131fb6a1442a180103e5dbd4aebf002"},{"_id":"public/categories/其他/index.html","modified":1433948224398,"shasum":"9e674f8032e497fcfc7692126dd27f961350afc0"},{"_id":"public/atom.xml","modified":1433948224401,"shasum":"a02689f2e267330ec0015e7988dbe180ef97bf4f"},{"_id":"public/index.html","modified":1433948224419,"shasum":"be06eca5282fbc3527ed7129338962346f98ebb1"},{"_id":"public/sitemap.xml","modified":1433948224403,"shasum":"3c21db76e12cab4a8d19455e9b00b8e4c8f1dfbf"},{"_id":"public/tags/websocket/index.html","modified":1433948224426,"shasum":"4e364ab9a8cf23957001f7eaebac1a52a58ad5f8"},{"_id":"public/2015/01/01/faqs/index.html","modified":1433948224359,"shasum":"48842055527c1a4bce5b5a78b0240d78ee134857"}],"Category":[{"name":"Java","_id":"ciaqu4hwk00055b8lx48jxdp8"},{"name":"其他","_id":"ciaqu4hwo000a5b8l79dih58t"}],"Data":[],"Page":[{"layout":"default","_content":"<html>\n<head>\n    <meta charset=\"UTF-8\"/>\n    <title>404</title>\n</head>\n<body>\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\"></script>\n</body>\n</html>","source":"404.html","raw":"---\nlayout: default\n---\n<html>\n<head>\n    <meta charset=\"UTF-8\"/>\n    <title>404</title>\n</head>\n<body>\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\"></script>\n</body>\n</html>","date":"2015-06-10T07:08:35.000Z","updated":"2015-06-10T07:08:35.000Z","path":"404.html","title":"","comments":1,"_id":"ciaqu4hvp00005b8ljnmwdyhw"},{"layout":"tags","title":"tags","_content":"","source":"tags/index.md","raw":"layout: tags\ntitle: tags \n---","date":"2015-06-10T06:29:37.000Z","updated":"2015-06-09T17:24:10.000Z","path":"tags/index.html","comments":1,"_id":"ciaqu4hw800015b8l2dzb5lei"},{"layout":"categories","title":"categories","_content":"","source":"categories/index.md","raw":"layout: categories\ntitle: categories \n---","date":"2015-06-10T06:29:37.000Z","updated":"2015-06-09T17:24:05.000Z","path":"categories/index.html","comments":1,"_id":"ciaqu4hwa00025b8lk6ka151n"},{"date":"2015-06-09T15:33:56.000Z","title":"关于","_content":"####Basic Info\nMy name is Liu Xing, A software developer on Java platform, I'm living in jingan, shanghai, China.  \n\n####Links\nGitHub: <https://github.com/liuxing87327>  ","source":"about/index.md","raw":"date: 2015-06-09 23:33:56\ntitle: \"关于\"\n---\n####Basic Info\nMy name is Liu Xing, A software developer on Java platform, I'm living in jingan, shanghai, China.  \n\n####Links\nGitHub: <https://github.com/liuxing87327>  ","updated":"2015-06-09T18:38:28.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"ciaqu4hwd00035b8lprp2wxab"}],"Post":[{"title":"Java Websocket实例","date":"2015-01-09T15:33:56.000Z","_content":"记录下自己在用的websocket\n\n##介绍\n\n现在很多网站为了实现即时通讯，所用的技术都是轮询(polling)。轮询是在特定的的时间间隔（如每1秒），\n由浏览器对服务器发出HTTP request，然后由服务器返回最新的数据给客服端的浏览器。\n这种传统的HTTP request 的模式带来很明显的缺点 – 浏览器需要不断的向服务器发出请求，\n然而HTTP request 的header是非常长的，里面包含的数据可能只是一个很小的值，这样会占用很多的带宽。\n\n而最比较新的技术去做轮询的效果是Comet – 用了AJAX。但这种技术虽然可达到全双工通信，但依然需要发出请求。\n\n在 WebSocket API，浏览器和服务器只需要要做一个握手的动作，然后，浏览器和服务器之间就形成了一条快速通道。两者之间就直接可以数据互相传送。\n    \n##运行环境：\n\n###客户端\n实现了websocket的浏览器\n\n###服务端\n\n####依赖\nTomcat 7.0.47以上 + J2EE7\n\n```xml\n<dependency>\n    <groupId>org.apache.tomcat</groupId>  \n    <artifactId>tomcat-websocket-api</artifactId>  \n    <version>7.0.47</version>  \n    <scope>provided</scope>  \n</dependency>  \n\n<dependency>  \n    <groupId>javax</groupId>  \n    <artifactId>javaee-api</artifactId>  \n    <version>7.0</version>  \n    <scope>provided</scope>  \n</dependency>\n\n```\n\n注意：早前业界没有统一的标准，各服务器都有各自的实现，现在J2EE7的JSR356已经定义了统一的标准，请尽量使用支持最新通用标准的服务器。\n\n详见：\nhttp://www.oracle.com/technetwork/articles/java/jsr356-1937161.html\nhttp://jinnianshilongnian.iteye.com/blog/1909962\n \n我是用的Tomcat 7.0.57 + Java7\n必须是Tomcat 7.0.47以上\n详见：http://www.iteye.com/news/28414\n \nps：最早我们是用的Tomcat 7自带的实现，后来要升级Tomcat 8，结果原来的实现方式在Tomcat 8不支持了，就只好切换到支持Websocket 1.0版本的Tomcat了。\n \n主流的java web服务器都有支持JSR365标准的版本了，请自行Google。 \n\n\n用nginx做反向代理的需要注意啦，socket请求需要做特殊配置的，切记！\n\n\nTomcat的处理方式建议修改为NIO的方式，同时修改连接数到合适的参数，请自行Google！\n\n服务端不需要在web.xml中做额外的配置，Tomcat启动后就可以直接连接了。\n\n\n####实现\n```java\nimport com.dooioo.websocket.utils.SessionUtils;\nimport org.apache.commons.logging.Log;\nimport org.apache.commons.logging.LogFactory;\n\nimport javax.websocket.*;\nimport javax.websocket.server.PathParam;\nimport javax.websocket.server.ServerEndpoint;\n\n/**\n * 功能说明：websocket处理类, 使用J2EE7的标准\n *         切忌直接在该连接处理类中加入业务处理代码\n * 作者：liuxing(2014-11-14 04:20)\n */\n//relationId和userCode是我的业务标识参数,websocket.ws是连接的路径，可以自行定义\n@ServerEndpoint(\"/websocket.ws/{relationId}/{userCode}\")\npublic class WebsocketEndPoint {\n\n    private static Log log = LogFactory.getLog(WebsocketEndPoint.class);\n\n    /**\n     * 打开连接时触发\n     * @param relationId\n     * @param userCode\n     * @param session\n     */\n    @OnOpen\n    public void onOpen(@PathParam(\"relationId\") String relationId,\n                       @PathParam(\"userCode\") int userCode,\n                       Session session){\n        log.info(\"Websocket Start Connecting: \" + SessionUtils.getKey(relationId, userCode));\n        SessionUtils.put(relationId, userCode, session);\n    }\n\n    /**\n     * 收到客户端消息时触发\n     * @param relationId\n     * @param userCode\n     * @param message\n     * @return\n     */\n    @OnMessage\n    public String onMessage(@PathParam(\"relationId\") String relationId,\n                            @PathParam(\"userCode\") int userCode,\n                            String message) {\n        return \"Got your message (\" + message + \").Thanks !\";\n    }\n\n    /**\n     * 异常时触发\n     * @param relationId\n     * @param userCode\n     * @param session\n     */\n    @OnError\n    public void onError(@PathParam(\"relationId\") String relationId,\n                        @PathParam(\"userCode\") int userCode,\n                        Throwable throwable,\n                        Session session) {\n        log.info(\"Websocket Connection Exception: \" + SessionUtils.getKey(relationId, userCode));\n        log.info(throwable.getMessage(), throwable);\n        SessionUtils.remove(relationId, userCode);\n    }\n\n    /**\n     * 关闭连接时触发\n     * @param relationId\n     * @param userCode\n     * @param session\n     */\n    @OnClose\n    public void onClose(@PathParam(\"relationId\") String relationId,\n                        @PathParam(\"userCode\") int userCode,\n                        Session session) {\n        log.info(\"Websocket Close Connection: \" + SessionUtils.getKey(relationId, userCode));\n        SessionUtils.remove(relationId, userCode);\n    }\n\n}\n    \n```\n \n工具类用来存储唯一key和连接\n\n这个是我业务的需要，我的业务是服务器有对应动作触发时，推送数据到客户端，没有接收客户端数据的操作。\n\n```java\nimport javax.websocket.Session;\nimport java.util.Map;\nimport java.util.concurrent.ConcurrentHashMap;\n\n/**\n * 功能说明：用来存储业务定义的sessionId和连接的对应关系\n *          利用业务逻辑中组装的sessionId获取有效连接后进行后续操作\n * 作者：liuxing(2014-12-26 02:32)\n */\npublic class SessionUtils {\n\n    public static Map<String, Session> clients = new ConcurrentHashMap<>();\n\n    public static void put(String relationId, int userCode, Session session){\n        clients.put(getKey(relationId, userCode), session);\n    }\n\n    public static Session get(String relationId, int userCode){\n        return clients.get(getKey(relationId, userCode));\n    }\n\n    public static void remove(String relationId, int userCode){\n        clients.remove(getKey(relationId, userCode));\n    }\n\n    /**\n     * 判断是否有连接\n     * @param relationId\n     * @param userCode\n     * @return\n     */\n    public static boolean hasConnection(String relationId, int userCode) {\n        return clients.containsKey(getKey(relationId, userCode));\n    }\n\n    /**\n     * 组装唯一识别的key\n     * @param relationId\n     * @param userCode\n     * @return\n     */\n    public static String getKey(String relationId, int userCode) {\n        return relationId + \"_\" + userCode;\n    }\n\n}\n   \n```\n\n推送数据到客户端\n \n在其他业务方法中调用\n\n```java\n\n/**\n * 将数据传回客户端\n * 异步的方式\n * @param relationId\n * @param userCode\n * @param message\n */\npublic void broadcast(String relationId, int userCode, String message) {\n    if (TelSocketSessionUtils.hasConnection(relationId, userCode)) {\n        TelSocketSessionUtils.get(relationId, userCode).getAsyncRemote().sendText(message);\n    } else {\n        throw new NullPointerException(TelSocketSessionUtils.getKey(relationId, userCode) + \" Connection does not exist\");\n    }\n}\n\n```\n\n我是使用异步的方法推送数据，还有同步的方法\n\n详见：<http://docs.oracle.com/javaee/7/api/javax/websocket/Session.html>\n\n客户端代码\n\n```java\nvar webSocket = null;\nvar tryTime = 0;\n$(function () {\n    initSocket();\n\n    window.onbeforeunload = function () {\n        //离开页面时的其他操作\n    };\n});\n\n/**\n * 初始化websocket，建立连接\n */\nfunction initSocket() {\n    if (!window.WebSocket) {\n        alert(\"您的浏览器不支持websocket！\");\n        return false;\n    }\n\n    webSocket = new WebSocket(\"ws://127.0.0.1:8080/websocket.ws/\" + relationId + \"/\" + userCode);\n    \n    // 收到服务端消息\n    webSocket.onmessage = function (msg) {\n        console.log(msg);\n    };\n    \n    // 异常\n    webSocket.onerror = function (event) {\n        console.log(event);\n    };\n    \n    // 建立连接\n    webSocket.onopen = function (event) {\n        console.log(event);\n    };\n\n    // 断线重连\n    webSocket.onclose = function () {\n        // 重试10次，每次之间间隔10秒\n        if (tryTime < 10) {\n            setTimeout(function () {\n                webSocket = null;\n                tryTime++;\n                initSocket();\n            }, 500);\n        } else {\n            tryTime = 0;\n        }\n    };\n\n}\n\n```\n\n其他调试工具\n\nJava实现一个websocket的客户端\n\n依赖：\n\n```xml\n\n<dependency>\n    <groupId>org.java-websocket</groupId>\n    <artifactId>Java-WebSocket</artifactId>\n    <version>1.3.0</version>\n</dependency>\n\n```\n\n代码：\n\n```java\n\nimport java.io.IOException;  \nimport javax.websocket.ClientEndpoint;  \nimport javax.websocket.OnError;  \nimport javax.websocket.OnMessage;  \nimport javax.websocket.OnOpen;  \nimport javax.websocket.Session;  \n   \n@ClientEndpoint  \npublic class MyClient {  \n    @OnOpen  \n    public void onOpen(Session session) {  \n        System.out.println(\"Connected to endpoint: \" + session.getBasicRemote());  \n        try {  \n            session.getBasicRemote().sendText(\"Hello\");  \n        } catch (IOException ex) {  \n        }  \n    }  \n   \n    @OnMessage  \n    public void onMessage(String message) {  \n        System.out.println(message);  \n    }  \n   \n    @OnError  \n    public void onError(Throwable t) {  \n        t.printStackTrace();  \n    }  \n}  \n\n```\n\n\n```java\n    \nimport java.io.BufferedReader;  \nimport java.io.IOException;  \nimport java.io.InputStreamReader;  \nimport java.net.URI;  \nimport javax.websocket.ContainerProvider;  \nimport javax.websocket.DeploymentException;  \nimport javax.websocket.Session;  \nimport javax.websocket.WebSocketContainer;  \n   \npublic class MyClientApp {  \n   \n    public Session session;  \n   \n    protected void start()  \n             {  \n   \n            WebSocketContainer container = ContainerProvider.getWebSocketContainer();  \n   \n            String uri = \"ws://127.0.0.1:8080/websocket.ws/relationId/12345\";  \n            System.out.println(\"Connecting to \" + uri);  \n            try {  \n                session = container.connectToServer(MyClient.class, URI.create(uri));  \n            } catch (DeploymentException e) {  \n                e.printStackTrace();  \n            } catch (IOException e) {  \n                e.printStackTrace();  \n            }               \n   \n    }  \n    public static void main(String args[]){  \n        MyClientApp client = new MyClientApp();  \n        client.start();  \n   \n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));  \n        String input = \"\";  \n        try {  \n            do{  \n                input = br.readLine();  \n                if(!input.equals(\"exit\"))  \n                    client.session.getBasicRemote().sendText(input);  \n   \n            }while(!input.equals(\"exit\"));  \n   \n        } catch (IOException e) {  \n            // TODO Auto-generated catch block  \n            e.printStackTrace();  \n        }  \n    }  \n}  \n\n```\n\nchrome安装一个websocket客户端调试 \n\n\n最后\n\n为了统一的操作体验，对于一些不支持websocket的浏览器，请使用socketjs技术做客户端开发。\n","source":"_posts/websocket-demo.md","raw":"title: Java Websocket实例\ndate: 2015-01-09 23:33:56\ncategory: [Java]\ntags: [websocket]\n---\n记录下自己在用的websocket\n\n##介绍\n\n现在很多网站为了实现即时通讯，所用的技术都是轮询(polling)。轮询是在特定的的时间间隔（如每1秒），\n由浏览器对服务器发出HTTP request，然后由服务器返回最新的数据给客服端的浏览器。\n这种传统的HTTP request 的模式带来很明显的缺点 – 浏览器需要不断的向服务器发出请求，\n然而HTTP request 的header是非常长的，里面包含的数据可能只是一个很小的值，这样会占用很多的带宽。\n\n而最比较新的技术去做轮询的效果是Comet – 用了AJAX。但这种技术虽然可达到全双工通信，但依然需要发出请求。\n\n在 WebSocket API，浏览器和服务器只需要要做一个握手的动作，然后，浏览器和服务器之间就形成了一条快速通道。两者之间就直接可以数据互相传送。\n    \n##运行环境：\n\n###客户端\n实现了websocket的浏览器\n\n###服务端\n\n####依赖\nTomcat 7.0.47以上 + J2EE7\n\n```xml\n<dependency>\n    <groupId>org.apache.tomcat</groupId>  \n    <artifactId>tomcat-websocket-api</artifactId>  \n    <version>7.0.47</version>  \n    <scope>provided</scope>  \n</dependency>  \n\n<dependency>  \n    <groupId>javax</groupId>  \n    <artifactId>javaee-api</artifactId>  \n    <version>7.0</version>  \n    <scope>provided</scope>  \n</dependency>\n\n```\n\n注意：早前业界没有统一的标准，各服务器都有各自的实现，现在J2EE7的JSR356已经定义了统一的标准，请尽量使用支持最新通用标准的服务器。\n\n详见：\nhttp://www.oracle.com/technetwork/articles/java/jsr356-1937161.html\nhttp://jinnianshilongnian.iteye.com/blog/1909962\n \n我是用的Tomcat 7.0.57 + Java7\n必须是Tomcat 7.0.47以上\n详见：http://www.iteye.com/news/28414\n \nps：最早我们是用的Tomcat 7自带的实现，后来要升级Tomcat 8，结果原来的实现方式在Tomcat 8不支持了，就只好切换到支持Websocket 1.0版本的Tomcat了。\n \n主流的java web服务器都有支持JSR365标准的版本了，请自行Google。 \n\n\n用nginx做反向代理的需要注意啦，socket请求需要做特殊配置的，切记！\n\n\nTomcat的处理方式建议修改为NIO的方式，同时修改连接数到合适的参数，请自行Google！\n\n服务端不需要在web.xml中做额外的配置，Tomcat启动后就可以直接连接了。\n\n\n####实现\n```java\nimport com.dooioo.websocket.utils.SessionUtils;\nimport org.apache.commons.logging.Log;\nimport org.apache.commons.logging.LogFactory;\n\nimport javax.websocket.*;\nimport javax.websocket.server.PathParam;\nimport javax.websocket.server.ServerEndpoint;\n\n/**\n * 功能说明：websocket处理类, 使用J2EE7的标准\n *         切忌直接在该连接处理类中加入业务处理代码\n * 作者：liuxing(2014-11-14 04:20)\n */\n//relationId和userCode是我的业务标识参数,websocket.ws是连接的路径，可以自行定义\n@ServerEndpoint(\"/websocket.ws/{relationId}/{userCode}\")\npublic class WebsocketEndPoint {\n\n    private static Log log = LogFactory.getLog(WebsocketEndPoint.class);\n\n    /**\n     * 打开连接时触发\n     * @param relationId\n     * @param userCode\n     * @param session\n     */\n    @OnOpen\n    public void onOpen(@PathParam(\"relationId\") String relationId,\n                       @PathParam(\"userCode\") int userCode,\n                       Session session){\n        log.info(\"Websocket Start Connecting: \" + SessionUtils.getKey(relationId, userCode));\n        SessionUtils.put(relationId, userCode, session);\n    }\n\n    /**\n     * 收到客户端消息时触发\n     * @param relationId\n     * @param userCode\n     * @param message\n     * @return\n     */\n    @OnMessage\n    public String onMessage(@PathParam(\"relationId\") String relationId,\n                            @PathParam(\"userCode\") int userCode,\n                            String message) {\n        return \"Got your message (\" + message + \").Thanks !\";\n    }\n\n    /**\n     * 异常时触发\n     * @param relationId\n     * @param userCode\n     * @param session\n     */\n    @OnError\n    public void onError(@PathParam(\"relationId\") String relationId,\n                        @PathParam(\"userCode\") int userCode,\n                        Throwable throwable,\n                        Session session) {\n        log.info(\"Websocket Connection Exception: \" + SessionUtils.getKey(relationId, userCode));\n        log.info(throwable.getMessage(), throwable);\n        SessionUtils.remove(relationId, userCode);\n    }\n\n    /**\n     * 关闭连接时触发\n     * @param relationId\n     * @param userCode\n     * @param session\n     */\n    @OnClose\n    public void onClose(@PathParam(\"relationId\") String relationId,\n                        @PathParam(\"userCode\") int userCode,\n                        Session session) {\n        log.info(\"Websocket Close Connection: \" + SessionUtils.getKey(relationId, userCode));\n        SessionUtils.remove(relationId, userCode);\n    }\n\n}\n    \n```\n \n工具类用来存储唯一key和连接\n\n这个是我业务的需要，我的业务是服务器有对应动作触发时，推送数据到客户端，没有接收客户端数据的操作。\n\n```java\nimport javax.websocket.Session;\nimport java.util.Map;\nimport java.util.concurrent.ConcurrentHashMap;\n\n/**\n * 功能说明：用来存储业务定义的sessionId和连接的对应关系\n *          利用业务逻辑中组装的sessionId获取有效连接后进行后续操作\n * 作者：liuxing(2014-12-26 02:32)\n */\npublic class SessionUtils {\n\n    public static Map<String, Session> clients = new ConcurrentHashMap<>();\n\n    public static void put(String relationId, int userCode, Session session){\n        clients.put(getKey(relationId, userCode), session);\n    }\n\n    public static Session get(String relationId, int userCode){\n        return clients.get(getKey(relationId, userCode));\n    }\n\n    public static void remove(String relationId, int userCode){\n        clients.remove(getKey(relationId, userCode));\n    }\n\n    /**\n     * 判断是否有连接\n     * @param relationId\n     * @param userCode\n     * @return\n     */\n    public static boolean hasConnection(String relationId, int userCode) {\n        return clients.containsKey(getKey(relationId, userCode));\n    }\n\n    /**\n     * 组装唯一识别的key\n     * @param relationId\n     * @param userCode\n     * @return\n     */\n    public static String getKey(String relationId, int userCode) {\n        return relationId + \"_\" + userCode;\n    }\n\n}\n   \n```\n\n推送数据到客户端\n \n在其他业务方法中调用\n\n```java\n\n/**\n * 将数据传回客户端\n * 异步的方式\n * @param relationId\n * @param userCode\n * @param message\n */\npublic void broadcast(String relationId, int userCode, String message) {\n    if (TelSocketSessionUtils.hasConnection(relationId, userCode)) {\n        TelSocketSessionUtils.get(relationId, userCode).getAsyncRemote().sendText(message);\n    } else {\n        throw new NullPointerException(TelSocketSessionUtils.getKey(relationId, userCode) + \" Connection does not exist\");\n    }\n}\n\n```\n\n我是使用异步的方法推送数据，还有同步的方法\n\n详见：<http://docs.oracle.com/javaee/7/api/javax/websocket/Session.html>\n\n客户端代码\n\n```java\nvar webSocket = null;\nvar tryTime = 0;\n$(function () {\n    initSocket();\n\n    window.onbeforeunload = function () {\n        //离开页面时的其他操作\n    };\n});\n\n/**\n * 初始化websocket，建立连接\n */\nfunction initSocket() {\n    if (!window.WebSocket) {\n        alert(\"您的浏览器不支持websocket！\");\n        return false;\n    }\n\n    webSocket = new WebSocket(\"ws://127.0.0.1:8080/websocket.ws/\" + relationId + \"/\" + userCode);\n    \n    // 收到服务端消息\n    webSocket.onmessage = function (msg) {\n        console.log(msg);\n    };\n    \n    // 异常\n    webSocket.onerror = function (event) {\n        console.log(event);\n    };\n    \n    // 建立连接\n    webSocket.onopen = function (event) {\n        console.log(event);\n    };\n\n    // 断线重连\n    webSocket.onclose = function () {\n        // 重试10次，每次之间间隔10秒\n        if (tryTime < 10) {\n            setTimeout(function () {\n                webSocket = null;\n                tryTime++;\n                initSocket();\n            }, 500);\n        } else {\n            tryTime = 0;\n        }\n    };\n\n}\n\n```\n\n其他调试工具\n\nJava实现一个websocket的客户端\n\n依赖：\n\n```xml\n\n<dependency>\n    <groupId>org.java-websocket</groupId>\n    <artifactId>Java-WebSocket</artifactId>\n    <version>1.3.0</version>\n</dependency>\n\n```\n\n代码：\n\n```java\n\nimport java.io.IOException;  \nimport javax.websocket.ClientEndpoint;  \nimport javax.websocket.OnError;  \nimport javax.websocket.OnMessage;  \nimport javax.websocket.OnOpen;  \nimport javax.websocket.Session;  \n   \n@ClientEndpoint  \npublic class MyClient {  \n    @OnOpen  \n    public void onOpen(Session session) {  \n        System.out.println(\"Connected to endpoint: \" + session.getBasicRemote());  \n        try {  \n            session.getBasicRemote().sendText(\"Hello\");  \n        } catch (IOException ex) {  \n        }  \n    }  \n   \n    @OnMessage  \n    public void onMessage(String message) {  \n        System.out.println(message);  \n    }  \n   \n    @OnError  \n    public void onError(Throwable t) {  \n        t.printStackTrace();  \n    }  \n}  \n\n```\n\n\n```java\n    \nimport java.io.BufferedReader;  \nimport java.io.IOException;  \nimport java.io.InputStreamReader;  \nimport java.net.URI;  \nimport javax.websocket.ContainerProvider;  \nimport javax.websocket.DeploymentException;  \nimport javax.websocket.Session;  \nimport javax.websocket.WebSocketContainer;  \n   \npublic class MyClientApp {  \n   \n    public Session session;  \n   \n    protected void start()  \n             {  \n   \n            WebSocketContainer container = ContainerProvider.getWebSocketContainer();  \n   \n            String uri = \"ws://127.0.0.1:8080/websocket.ws/relationId/12345\";  \n            System.out.println(\"Connecting to \" + uri);  \n            try {  \n                session = container.connectToServer(MyClient.class, URI.create(uri));  \n            } catch (DeploymentException e) {  \n                e.printStackTrace();  \n            } catch (IOException e) {  \n                e.printStackTrace();  \n            }               \n   \n    }  \n    public static void main(String args[]){  \n        MyClientApp client = new MyClientApp();  \n        client.start();  \n   \n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));  \n        String input = \"\";  \n        try {  \n            do{  \n                input = br.readLine();  \n                if(!input.equals(\"exit\"))  \n                    client.session.getBasicRemote().sendText(input);  \n   \n            }while(!input.equals(\"exit\"));  \n   \n        } catch (IOException e) {  \n            // TODO Auto-generated catch block  \n            e.printStackTrace();  \n        }  \n    }  \n}  \n\n```\n\nchrome安装一个websocket客户端调试 \n\n\n最后\n\n为了统一的操作体验，对于一些不支持websocket的浏览器，请使用socketjs技术做客户端开发。\n","slug":"websocket-demo","published":1,"updated":"2015-06-10T12:15:38.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciaqu4hwg00045b8l2c08p5kf"},{"title":"备忘","date":"2014-12-31T16:00:00.000Z","_content":"记录工作中遇到的一些小问题及解决办法，以防忘记后重头再找答案。\n\n##格式：\n问：Win7下 Eclipse中按\"Alt+Ctrl+Down或Alt+Ctrl+Up\"时，结果屏幕倒了怎么办？  \n答：是不是和其它应用的快捷键冲突了？比如Intel显卡，则可选择“图形属性”>“选项和支持”，将对应快捷键换掉。参考：http://www.2cto.com/os/201201/116412.html\n\n##或作为url收藏记录\n- Markdown语法：<http://wowubuntu.com/markdown/basic.html>  \n- Oracle现在真是恶心，下载个Java SDK还非得让登陆不可。只好再找下载地址了: <http://ghaffarian.net/downloads/>  \n- GIT文章收藏:  \n    Git分支管理策略: <http://www.ruanyifeng.com/blog/2012/07/git.html>    \n    Git查看、删除、重命名远程分支和tag: http://zengrong.net/post/1746.htm  \n- Google无障碍浏览链接：<https://github.com/greatfire/wiki>  \n- 在线Android等源码：<http://www.grepcode.com/>, <http://androidxref.com/>  \n- Twitter University: <http://www.bluemobi.cn/>  \n\n##本项目使用了\n\n- CNZZ的网站统计服务，官网：<http://cnzz.com/>  \n- 友言的网友评论服务，官网：<http://www.uyan.cc/>  \n- Google 的Adsense广告，官网：<https://www.google.com/adsense/login/zh_CN/>  \n如需查看或管理网站统计、评论或广告，请自行注册帐号并修改_includes目录下相关文件。","source":"_posts/faqs.md","raw":"title: \"备忘\"\ndate: 2015-01-01 00:00:00\ncategory: [其他]\ntags: \n---\n记录工作中遇到的一些小问题及解决办法，以防忘记后重头再找答案。\n\n##格式：\n问：Win7下 Eclipse中按\"Alt+Ctrl+Down或Alt+Ctrl+Up\"时，结果屏幕倒了怎么办？  \n答：是不是和其它应用的快捷键冲突了？比如Intel显卡，则可选择“图形属性”>“选项和支持”，将对应快捷键换掉。参考：http://www.2cto.com/os/201201/116412.html\n\n##或作为url收藏记录\n- Markdown语法：<http://wowubuntu.com/markdown/basic.html>  \n- Oracle现在真是恶心，下载个Java SDK还非得让登陆不可。只好再找下载地址了: <http://ghaffarian.net/downloads/>  \n- GIT文章收藏:  \n    Git分支管理策略: <http://www.ruanyifeng.com/blog/2012/07/git.html>    \n    Git查看、删除、重命名远程分支和tag: http://zengrong.net/post/1746.htm  \n- Google无障碍浏览链接：<https://github.com/greatfire/wiki>  \n- 在线Android等源码：<http://www.grepcode.com/>, <http://androidxref.com/>  \n- Twitter University: <http://www.bluemobi.cn/>  \n\n##本项目使用了\n\n- CNZZ的网站统计服务，官网：<http://cnzz.com/>  \n- 友言的网友评论服务，官网：<http://www.uyan.cc/>  \n- Google 的Adsense广告，官网：<https://www.google.com/adsense/login/zh_CN/>  \n如需查看或管理网站统计、评论或广告，请自行注册帐号并修改_includes目录下相关文件。","slug":"faqs","published":1,"updated":"2015-06-10T14:18:43.000Z","_id":"ciaqu4hwn00095b8ly3z1xr0i","comments":1,"layout":"post","photos":[],"link":""}],"PostAsset":[],"PostCategory":[{"post_id":"ciaqu4hwg00045b8l2c08p5kf","category_id":"ciaqu4hwk00055b8lx48jxdp8","_id":"ciaqu4hwm00085b8lczeybtm2"},{"post_id":"ciaqu4hwn00095b8ly3z1xr0i","category_id":"ciaqu4hwo000a5b8l79dih58t","_id":"ciaqudo8k00025c8lscispwqd"}],"PostTag":[{"post_id":"ciaqu4hwg00045b8l2c08p5kf","tag_id":"ciaqu4hwk00065b8ljn0wroii","_id":"ciaqu4hwm00075b8ld4v966ao"}],"Tag":[{"name":"websocket","_id":"ciaqu4hwk00065b8ljn0wroii"}]}}